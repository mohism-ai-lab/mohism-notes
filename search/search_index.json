{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"webrtc/WebRTC-Prepare/","text":"0. Introduction 1. Source Code Fetch 1.1 Windows platform 1.1.1 Prerequisite Python 2.17. GIT Windows version. depot_tools. Python and git tool's installation is very simple, let's focus on how to install depot_tools which is the special tool to manage chromium's source code. Install depot_tools Download the depot_tools bundle and extract it somewhere. Then add depot_tools to the start of your PATH (must be ahead of any installs of Python). Also, add a DEPOT_TOOLS_WIN_TOOLCHAIN system variable in the same way, and set it to 0. This tells depot_tools to use your locally installed version of Visual Studio (by default, depot_tools will try to use a google-internal version). From a cmd.exe shell, run the command gclient (without arguments). On first run, gclient will install all the Windows-specific bits needed to work with the code, including msysgit and python. Source code download Then choose the place you want to store the webrtc source code, cd to that directory, run: fetch --nohooks webrtc gclient sync 1.1.2 Build isssues ERROR Need exactly one build directory to generate When I run the gn command like below: gn gen out/debug_clang_vs2019 --args='target_cpu=x64 is_debug=false is_component_build=false is_clang=false rtc_include_tests=false rtc_use_h264=true use_rtti=true use_custom_libcxx=false treat_warnings_as_errors=false use_ozone=true' --ide=vs2019 I received the error above. After some investigations, I changed the command like this: >gn gen --ide=vs2019 out/release --args=\"target_cpu=\\\"x64\\\" is_debug=false is_component_build=false is_clang=false rtc_include_tests=false rtc_use_h264=true use_rtti=true use_custom_libcxx=false treat_warnings_as_errors=false use_ozone=true\" The problem was solved. 1.1.3 Build instructions gn gen --ide=vs2019 out/release --args=\"target_cpu=\\\"x64\\\" is_debug=false is_component_build=false is_clang=false rtc_include_tests=false rtc_use_h264=true use_rtti=true use_custom_libcxx=false treat_warnings_as_errors=false use_ozone=true\" 1.2 How to view RTC logs on Windows platform Originally I have no idea about this issue. Then after my tries, I found that it's easy to fix. Adding the build arg \"is_debug=true\" to the build args' list. then build the whole project. Then install the DebugView on Windows 10, then when you launch the peerconnection_client.exe, you can see the logs were dumped by DebugView. 2. PeerConection source code review 3. How to enable the high profile levels of H264 decoding and encoding. 3.1 High profile level of H264 encoding. 3.2 High profile level of H264 decoding. References https://topic.alibabacloud.com/a/let-webrtc-support-h264-codec_8_8_10275189.html Control bandwidth The practise of Video quality improvement in WebRTC About openh264 libray Q. Which profiles of H.264 will be supported? A: The initial code has the baseline profile. We look forward to working with the open source community to add high profile and others. Other Tips In order to run the javascript locally, I have to configure the firefox: privacy.file_unique_origin = false Reference https://github.com/berinhard/pyp5js/issues/72 https://groups.google.com/g/discuss-webrtc/c/rMk8tfuVzuE/m/E9cLYfclAgAJ https://dev.to/dengel29/loading-local-files-in-firefox-and-chrome-m9f","title":"WebRTC Prepare"},{"location":"webrtc/WebRTC-Prepare/#0-introduction","text":"","title":"0. Introduction"},{"location":"webrtc/WebRTC-Prepare/#1-source-code-fetch","text":"","title":"1. Source Code Fetch"},{"location":"webrtc/WebRTC-Prepare/#11-windows-platform","text":"","title":"1.1 Windows platform"},{"location":"webrtc/WebRTC-Prepare/#111-prerequisite","text":"Python 2.17. GIT Windows version. depot_tools. Python and git tool's installation is very simple, let's focus on how to install depot_tools which is the special tool to manage chromium's source code.","title":"1.1.1 Prerequisite"},{"location":"webrtc/WebRTC-Prepare/#install-depot_tools","text":"Download the depot_tools bundle and extract it somewhere. Then add depot_tools to the start of your PATH (must be ahead of any installs of Python). Also, add a DEPOT_TOOLS_WIN_TOOLCHAIN system variable in the same way, and set it to 0. This tells depot_tools to use your locally installed version of Visual Studio (by default, depot_tools will try to use a google-internal version). From a cmd.exe shell, run the command gclient (without arguments). On first run, gclient will install all the Windows-specific bits needed to work with the code, including msysgit and python.","title":"Install depot_tools"},{"location":"webrtc/WebRTC-Prepare/#source-code-download","text":"Then choose the place you want to store the webrtc source code, cd to that directory, run: fetch --nohooks webrtc gclient sync","title":"Source code download"},{"location":"webrtc/WebRTC-Prepare/#112-build-isssues","text":"ERROR Need exactly one build directory to generate When I run the gn command like below: gn gen out/debug_clang_vs2019 --args='target_cpu=x64 is_debug=false is_component_build=false is_clang=false rtc_include_tests=false rtc_use_h264=true use_rtti=true use_custom_libcxx=false treat_warnings_as_errors=false use_ozone=true' --ide=vs2019 I received the error above. After some investigations, I changed the command like this: >gn gen --ide=vs2019 out/release --args=\"target_cpu=\\\"x64\\\" is_debug=false is_component_build=false is_clang=false rtc_include_tests=false rtc_use_h264=true use_rtti=true use_custom_libcxx=false treat_warnings_as_errors=false use_ozone=true\" The problem was solved.","title":"1.1.2 Build isssues"},{"location":"webrtc/WebRTC-Prepare/#113-build-instructions","text":"gn gen --ide=vs2019 out/release --args=\"target_cpu=\\\"x64\\\" is_debug=false is_component_build=false is_clang=false rtc_include_tests=false rtc_use_h264=true use_rtti=true use_custom_libcxx=false treat_warnings_as_errors=false use_ozone=true\"","title":"1.1.3 Build instructions"},{"location":"webrtc/WebRTC-Prepare/#12-how-to-view-rtc-logs-on-windows-platform","text":"Originally I have no idea about this issue. Then after my tries, I found that it's easy to fix. Adding the build arg \"is_debug=true\" to the build args' list. then build the whole project. Then install the DebugView on Windows 10, then when you launch the peerconnection_client.exe, you can see the logs were dumped by DebugView.","title":"1.2 How to view RTC logs on Windows platform"},{"location":"webrtc/WebRTC-Prepare/#2-peerconection-source-code-review","text":"","title":"2. PeerConection source code review"},{"location":"webrtc/WebRTC-Prepare/#3-how-to-enable-the-high-profile-levels-of-h264-decoding-and-encoding","text":"","title":"3. How to enable the high profile levels of H264 decoding and encoding."},{"location":"webrtc/WebRTC-Prepare/#31-high-profile-level-of-h264-encoding","text":"","title":"3.1 High profile level of H264 encoding."},{"location":"webrtc/WebRTC-Prepare/#32-high-profile-level-of-h264-decoding","text":"","title":"3.2 High profile level of H264 decoding."},{"location":"webrtc/WebRTC-Prepare/#references","text":"https://topic.alibabacloud.com/a/let-webrtc-support-h264-codec_8_8_10275189.html","title":"References"},{"location":"webrtc/WebRTC-Prepare/#control-bandwidth","text":"","title":"Control bandwidth"},{"location":"webrtc/WebRTC-Prepare/#the-practise-of-video-quality-improvement-in-webrtc","text":"","title":"The practise of Video quality improvement in WebRTC"},{"location":"webrtc/WebRTC-Prepare/#about-openh264-libray","text":"Q. Which profiles of H.264 will be supported? A: The initial code has the baseline profile. We look forward to working with the open source community to add high profile and others.","title":"About openh264 libray"},{"location":"webrtc/WebRTC-Prepare/#other-tips","text":"In order to run the javascript locally, I have to configure the firefox: privacy.file_unique_origin = false","title":"Other Tips"},{"location":"webrtc/WebRTC-Prepare/#reference","text":"https://github.com/berinhard/pyp5js/issues/72 https://groups.google.com/g/discuss-webrtc/c/rMk8tfuVzuE/m/E9cLYfclAgAJ https://dev.to/dengel29/loading-local-files-in-firefox-and-chrome-m9f","title":"Reference"}]}